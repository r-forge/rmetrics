SkewedHyperbolicDistributionpackage:SkewedHyperbolicR Documentation

_S_k_e_w_e_d _H_y_p_e_r_b_o_l_i_c _S_t_u_d_e_n_t'_s _t-_D_i_s_t_r_i_b_u_t_i_o_n

_D_e_s_c_r_i_p_t_i_o_n:

     Density function, distribution function, quantiles and random
     number generation for the Generalised Hyperbolic Skew Student's
     t-Distribution, with parameters beta (skewness), delta
     (peakedness), mu (location) and nu (shape).

_U_s_a_g_e:

     dskewhyp(x, mu = 0, delta = 1, beta = 1, nu = 1, param = c(mu, delta,
       beta, nu), log = FALSE, tolerance = .Machine$double.eps^0.5)
     pskewhyp(q, mu = 0, delta = 1, beta = 1, nu = 1,param =
       c(mu,delta,beta,nu), log = FALSE, lower.tail = TRUE, small = 10^(-6),
       tiny = 10^(-10), subdivisions = 100, accuracy = FALSE, ...)
     qskewhyp(p, mu = 0, delta = 1, beta = 1, nu = 1, param =
       c(mu,delta,beta,nu), small = 10^(-6), tiny = 10^(-10), deriv = 0.3,
       nInterpol = 100, subdivisions = 100, ...)
     rskewhyp(n, mu = 0, delta = 1, beta = 1, nu = 1, param =
       c(mu,delta,beta,nu), log = FALSE)

_A_r_g_u_m_e_n_t_s:

     x,q: Vector of quantiles.

       p: Vector of probabilities.

       n: Number of random variates to be generated.

      mu: Location parameter mu, default is 0.

   delta: Peakedness parameter delta, default is 1.

    beta: Skewness parameter beta, default is 1.

      nu: Shape parameter nu, default is 1.

   param: Specifying the parameters as a vector of the form 'c(mu,
          delta, beta, nu)'.

     log: Logical; if 'log = TRUE', probabilities are given as log(p).

lower.tail: Logical; if 'lower.tail = TRUE', the cumulative density is
          taken from the lower tail.

tolerance: Specified level of tolerance when checking if parameter beta
          is equal to 0.

   small: Size of a small difference between the distribution function
          and 0 or 1.

    tiny: Size of a tiny difference between the distribution function
          and 0 or 1.

subdivisions: The maximum number of subdivisions used to integrate the
          density and determine the accuracy of the distribution
          function calculation.

accuracy: Logical; if 'accuracy = TRUE', accuracy calculated by
          'integrate' to try and determine the accuracy of the
          distribution function calculation.

   deriv: Value between 0 and 1 which determines the point at which the
          value of the derivative becomes substantial compared to its
          maximal value, see *Details*.

nInterpol: Number of points used in 'qskewhyp' for cubic spline
          interpolation of the distribution function.

     ...: Passes additional arguments to 'integrate'.

_D_e_t_a_i_l_s:

     Users may either specify the values of the parameters individually
     or as a vector. If both forms are specified, then the values
     specified by the vector 'param' will overwrite the other ones.

     The density function is


 f(x) = (2^((1-nu)/2) delta^nu abs(beta)^((nu+1)/2) K_((nu+1)/2)(sqrt(beta^2 (delta^2+(x-mu)^2)) ) exp(beta (x-mu)))/ (gamma(nu/2) sqrt(pi) (sqrt(delta^2+(x-mu)^2))^((nu+1)/2))


     when beta != 0, and


 f(x)=(gamma((nu+1)/2)/(sqrt(pi)  delta gamma(nu/2)))(1+((x-mu)^2)/(delta^2))^(-(nu+1)/2)


     when beta = 0, where K_nu(.) is the modified Bessel function of
     the third kind with order nu, and gamma is the gamma function.

     'pskewhyp' breaks the real line in to 8 regions in order to
     determine the integral of 'dhyperb'. The breakpoints determining
     the regions are calculated by 'skewhypBreaks', based on the values
     of 'small', 'tiny', and 'deriv'.

     The inner area is divided into two regions above and two below the
     mode. The breakpoint that divides these is calculated to be where
     the derivative of the density function is 'deriv' times the value
     of the maximum derivative on that side of the mode. In the extreme
     tails of the distribution where the probability is 'tiny' the
     probability is taken to be zero. In the remaining regions the
     integral of the density is calculated using the numerical routine
     'safeIntegrate' (a wrapper for 'integrate').

     'qhyperb' Used the same breakup of the real line as 'pskewhyp'.
     For quantiles that fall in the two extreme regions the quantile is
     returned as 'Inf' or '-Inf' as appropriate. In the remaining
     regions 'splinefun' is used to fit values of the distribution
     function calulated by 'pskewhyp'. The quantiles are then found by
     the 'uniroot' function.

_V_a_l_u_e:

     'dskewhyp' gives the density function, 'pskewhyp' gives the
     distribution function, 'qskewhyp' gives the quantile function and
     'rskewhyp' generates random variates.

     An estimate of the accuracy of the approximation to the
     distribution function can be found by setting 'accuracy=TRUE' in
     the call to 'pskewyhp' which returns a list with components
     'value' and 'error'.

_A_u_t_h_o_r(_s):

     David Scott d.scott@auckland.ac.nz, Fiona Grimson

_R_e_f_e_r_e_n_c_e_s:

     Aas, K. and Haff, I. H. (2006). The generalised hyperbolic skew
     Student's _t_-distribution, _Journal of Financial Econometrics_,
     *4*, 275-309.

_S_e_e _A_l_s_o:

     'safeIntegrate', 'integrate' for its shortfalls, 'skewhypBreaks'

