{
    "collab_server" : "",
    "contents" : "/** \n * @file  congruRand.h\n * @brief header file for congruential RNG\n *\n * @author Christophe Dutang\n * @author Petr Savicky \n *\n *\n * Copyright (C) 2009, Christophe Dutang, \n * Petr Savicky, Academy of Sciences of the Czech Republic. \n * All rights reserved.\n *\n * The new BSD License is applied to this software.\n * Copyright (c) 2009 Christophe Dutang, Petr Savicky. \n * All rights reserved.\n *\n *      Redistribution and use in source and binary forms, with or without\n *      modification, are permitted provided that the following conditions are\n *      met:\n *      \n *          - Redistributions of source code must retain the above copyright\n *          notice, this list of conditions and the following disclaimer.\n *          - Redistributions in binary form must reproduce the above\n *          copyright notice, this list of conditions and the following\n *          disclaimer in the documentation and/or other materials provided\n *          with the distribution.\n *          - Neither the name of the Academy of Sciences of the Czech Republic\n *          nor the names of its contributors may be used to endorse or promote \n *          products derived from this software without specific prior written\n *          permission.\n *     \n *      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n *      \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n *      LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n *      A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n *      OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n *      SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n *      LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n *      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n *      THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n *      (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n *      OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *  \n */\n/*****************************************************************************\n *  Congruential random number generators\n *    \n *      header file\n *\n */\n\n//R header files\n#include <R.h>\n#include <Rmath.h>\n\n\n/* \n * 64-bit int size type\n * similar to SFMT.h: see http://en.wikibooks.org/wiki/C_Programming/C_Reference/stdint.h \n * and p150 of Write Portable Code by Brian Hook\n */\n#if defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901L)\n #include <inttypes.h>\n #define HAVE_INT32_64_DEFINED 1\n#elif defined(_MSC_VER) || defined(__BORLANDC__) || defined(__WATCOMC__)\n typedef unsigned int uint32_t;\n typedef unsigned __int64 uint64_t;\n #define inline __inline\n #define HAVE_INT32_64_DEFINED 1\n#elif defined(__LP64__) || defined(__powerpc64__)\n typedef unsigned int uint32_t;\n typedef unsigned long uint64_t;\n #define inline __inline\n #define HAVE_INT32_64_DEFINED 1\n#else\n #include <inttypes.h>\n #if defined(__GNUC__)\n #define inline __inline__\n #endif\n #define HAVE_INT32_64_DEFINED 1\n#endif\n\n/*64-bit int size specification for printf family*/\n#ifndef PRIu64\n #if defined(_MSC_VER) || defined(__BORLANDC__)\n  #include <stdio.h>\n  #define PRIu64 \"I64u\"\n  #define PRIx64 \"I64x\"\n #elif defined(__LP64__) || defined(__powerpc64__)\n  #include <stdio.h>\n  #define PRIu64 \"lu\"\n  #define PRIx64 \"lx\"\n #else\n  #define PRIu64 \"llu\"\n  #define PRIx64 \"llx\"\n #endif\n#endif\n\n/*64-bit int size specification for scanf family*/\n#ifndef SCNu64\n #if defined(_MSC_VER) || defined(__BORLANDC__)\n  #include <stdio.h>\n  #define SCNu64 \"U64\"\n #elif defined(__LP64__) || defined(__powerpc64__)\n  #include <stdio.h>\n  #define SCNu64 \"lu\"\n #else\n  #define SCNu64 \"llu\"\n #endif\n#endif\n\ndouble user_unif_rand_congru();\nvoid user_unif_init_congru(uint32_t seed);\n\ndouble get_congruRand();\nint check_congruRand(uint64_t mod, uint64_t mask, uint64_t mult, uint64_t incr, uint64_t seed);\nvoid set_congruRand(uint64_t inp_mod, uint64_t inp_mult, uint64_t inp_incr, uint64_t inp_seed, uint64_t inp_mask);\nvoid get_seed_congruRand(uint64_t *out_seed);\n\n/* Functions accessed from .C() */\nvoid get_state_congru(char **params, char **seed);\nvoid check_state_congru(char **params, char **seed, int *err);\nvoid put_state_congru(char **params, char **seed, int *err);\n\n",
    "created" : 1519136748189.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2795938109",
    "id" : "E6E7DC22",
    "lastKnownWriteTime" : 1521552310,
    "last_content_update" : 1521552310679,
    "path" : "~/Documents/recherche-enseignement/code/R/rmetrics/Rmetrics2/rmetrics/pkg/randtoolbox/src/congruRand.h",
    "project_path" : "src/congruRand.h",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "h"
}